<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC 
"-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="noticeMapper">
   <resultMap type="Notice" id="noticeResultSet">
      <id property="nNo" column="NNO"/>
      <result property="eId" column="EID"/>
      <result property="no" column="NO"/>
      <result property="nTitle" column="NTITLE"/>
      <result property="nContent" column="NCONTENT"/>
      <result property="nCount" column="NCOUNT"/>
      <result property="nDate" column="NDATE"/>
      <result property="modifyDate" column="MODIFYDATE"/>
      <result property="status" column="STATUS"/>
   </resultMap>
   
   <resultMap type="nReply" id="nReplyResultSet">
      <id property="nrId" column="NRID"/>
      <result property="nNo" column="NNO"/>
      <result property="nrWriter" column="NRWRITER"/>
      <result property="nrContent" column="NRCONTENT"/>
      <result property="nrCreateDate" column="NRCREATEDATE"/>
      <result property="nrModifyDate" column="NRMODIFYDATE"/>
      <result property="nrStatus" column="NRSTATUS"/>
   </resultMap>
   
   <resultMap id="employeeResultSet" type="Employee1">
      <id property="eId" column="EID"/>
       <result property="dId" column="DID"/>
      <result property="rId" column="RID"/> 
      <result property="ePwd" column="EPWD"/>
      <result property="eName" column="ENAME"/>
      <result property="email" column="EMAIL"/>
      <result property="phone" column="PHONE"/>
      <result property="address" column="ADDRESS"/>
       <result property="salary" column="SALARY"/> 
      <result property="join_date" column="JOIN_DATE"/>
       <result property="leave_date" column="LEAVE_DATE"/> 
      <result property="status" column="STATUS"/>
       <result property="holiday" column="HOLIDAY"/> 
       <result property="eBirth" column="EBIRTH"/>   
       <result property="rName" column="RNAME"/>
       <result property="dName" column="DNAME"/>   
   </resultMap>
   
   
   <select id="selectListCount" resultType="_int">
      SELECT COUNT(*)
      FROM NOTICE
      WHERE STATUS='Y'
        AND NO='1'
   </select>
   
   <select id="selectList" resultMap="noticeResultSet">
      SELECT NNO, EID, NO, NTITLE, NCONTENT, NDATE, MODIFYDATE, N.STATUS, ENAME, R.RNAME
      FROM NOTICE N
      JOIN EMPLOYEE E USING (EID)
      LEFT JOIN RANK R USING (RID)
      WHERE N.STATUS='Y'
      ORDER BY NNO DESC
   </select>
   
   <!-- 게시판 수정 -->
   <update id="updateNotice" parameterType="Notice">
      UPDATE NOTICE
      SET NTITLE=#{nTitle},
         NCONTENT=#{nContent}
      WHERE NNO=#{nNo}
   </update>
   
   <update id="updateCount" parameterType="_int">
      UPDATE NOTICE
      SET NCOUNT = NCOUNT+1
      WHERE EID=#{eId}
   </update>
   
   <select id="selectOne" parameterType="_int" resultMap="noticeResultSet">
      SELECT NNO, EID, NO, NTITLE, NCONTENT, NDATE, MODIFYDATE, N.STATUS, E.ENAME
      FROM NOTICE N
      JOIN EMPLOYEE E USING (EID)
      WHERE NNO=#{nNo}
   </select>
   
   <!-- 게시글 등록 여기서부터 다시해야함 -->
   <insert id="insertNotice" parameterType="Notice">
      INSERT INTO NOTICE
      VALUES(SEQ_NNO.NEXTVAL, #{eId}, 1, #{nTitle}, #{nContent}, DEFAULT, SYSDATE, NULL, DEFAULT)
   </insert>
   
   <!-- 팀 게시판 게시글 등록 여기서부터 다시해야함  -->
   <insert id="insertNotice2" parameterType="Notice">
      INSERT INTO NOTICE
      VALUES(SEQ_NNO.NEXTVAL, #{eId}, #{no} , #{nTitle}, #{nContent}, DEFAULT, SYSDATE, NULL, 'I')
   </insert>
   
   <!-- 파일 저장 -->
   <insert id="insertAttachment" parameterType="Attachment">
      INSERT INTO ATTACHMENT
      VALUES(SEQ_FID.NEXTVAL, NULL, SEQ_NNO.CURRVAL, NULL,
            NULL, NULL, NULL, NULL, #{filePath}, #{originName}, #{changeName}, SYSDATE, 70, DEFAULT)
   </insert>
   
   <!-- 첨부파일 조회 -->
   <select id="selectAttachment" resultType="Attachment">
      SELECT * 
      FROM ATTACHMENT
      WHERE NNO=#{nNo}
      AND FSTATUS='Y'
   </select>
   
   <!-- 게시글 삭제 -->
   <update id="deleteNotice" parameterType="_int">
      UPDATE NOTICE
      SET STATUS='N'
      WHERE NNO=#{nNo}
   </update>
   
   <!-- 첨부파일 삭제 -->
   <update id="deleteAttachment" parameterType="Attachment">
      DELETE FROM ATTACHMENT
      WHERE NNO=#{nNo}
   </update>
   
   <select id="searchList" parameterType="Search" resultMap="noticeResultSet">
      <bind name="sv" value="'%' + _parameter.getSearchValue() + '%'"/>
      SELECT NNO, EID, NO, NTITLE, NCONTENT, NDATE, MODIFYDATE, N.STATUS, ENAME, R.RNAME
      FROM NOTICE N
      JOIN EMPLOYEE E USING (EID)
      LEFT JOIN RANK R USING (RID)
      <where>
         <choose>
            <when test="searchCondition == 'eName'">
               AND ENAME LIKE #{sv}
            </when>
            <when test="searchCondition == 'nTitle'">
               AND NTITLE LIKE #{sv}
            </when>
            <otherwise>
               AND (ENAME LIKE #{sv}
                    OR NTITLE LIKE #{sv})
            </otherwise>
         </choose>
         AND N.STATUS='Y'
      </where>
      ORDER BY NNO DESC
   </select>
   
   <!-- 수정시 첨부파일 없을때 insert -->
   <insert id="insertAttachment2">
      INSERT INTO ATTACHMENT
      VALUES(SEQ_FID.NEXTVAL, NULL, #{nNo}, NULL, NULL, NULL, NULL, NULL, #{filePath}, #{originName}, #{changeName}, SYSDATE, 70, DEFAULT)
   </insert>
   
   <!-- 첨부파일 수정 -->
   <update id="updateAttachment" parameterType="Attachment">
      UPDATE ATTACHMENT
      SET FILEPATH=#{filePath},
         ORIGINNAME=#{originName},
         CHANGENAME=#{changeName}
      WHERE NNO=#{nNo}
   </update>   
   
   <insert id="insertReply" parameterType="nReply">
      INSERT INTO NREPLY
      VALUES(SEQ_NRID.NEXTVAL, #{nNo}, #{nrContent}, SYSDATE, SYSDATE, DEFAULT, #{nrWriter})
   </insert>
   
   <!-- 검색된 게시글 갯수구하기  -->
   <select id="SselectListCount" resultType="_int">
      <bind name="sv" value="'%' + _parameter.getSearchValue() + '%'"/>
      SELECT COUNT(*)
      FROM NOTICE N
      JOIN EMPLOYEE E USING (EID)
      <where>
         <choose>
            <when test="searchCondition == 'eName'">
               AND E.ENAME LIKE #{sv}
            </when>
            <when test="searchCondition == 'nTitle'">
               AND NTITLE LIKE #{sv}
            </when>
            <otherwise>
               AND (E.ENAME LIKE #{sv}
                    OR NTITLE LIKE #{sv})
            </otherwise>
         </choose>
      </where>
      AND N.STATUS='Y'
      ORDER BY NNO DESC
   </select>
   
   <select id="selectReplyList" parameterType="_int" resultMap="nReplyResultSet">
      SELECT *
      FROM NREPLY
      WHERE NNO=#{nNo}
      AND NRSTATUS='Y'
      ORDER BY NRID DESC
   </select>
   
   
   
   <!-- 여기가 result 0이 나오는 곳 선택 삭제 -->
   <delete id="deleteNotices">
     DELETE FROM NOTICE
     WHERE NNO IN  
     <foreach collection="array" item="nNo" open="(" close=")" separator=","> 
        #{nNo}
     </foreach> 
  </delete>
  
   <delete id="deleteAttach1">
     DELETE FROM ATTACHMENT
     WHERE NNO IN  
     <foreach collection="array" item="nNo" open="(" close=")" separator=","> 
        #{nNo}
     </foreach> 
  </delete>
  
   <delete id="deleteReply">
     DELETE FROM NREPLY
     WHERE NNO IN  
     <foreach collection="array" item="nNo" open="(" close=")" separator=","> 
        #{nNo}
     </foreach> 
  </delete>
  
  
  <select id="selectEmp" parameterType="String" resultMap="employeeResultSet">
      SELECT EID, DID, RID, RNAME, DNAME, ENAME, EMAIL, PHONE, ADDRESS, SALARY, JOIN_DATE, LEAVE_DATE, HOLIDAY, EBIRTH, STATUS
      FROM EMPLOYEE
      JOIN RANK USING(RID)
        JOIN DEPARTMENT USING(DID)
      WHERE EID=#{eId}
      AND STATUS='Y'
   </select>
  
  <select id="tselectListCount" resultType="_int">
      SELECT COUNT(*)
      FROM NOTICE
      WHERE STATUS='Y'
        AND NO=#{dId}
   </select>
   
   <select id="tselectList" resultMap="noticeResultSet">
      SELECT *
      FROM NOTICE
      WHERE STATUS='Y'
        AND NO=#{dId}
      ORDER BY NNO DESC
   </select>
  
     <select id="tselectListCount1" resultType="_int">
      SELECT COUNT(*)
      FROM NOTICE
      WHERE STATUS='N'
        AND NO=#{dId}
   </select>
   
     <select id="tselectListCount2" resultType="_int">
      SELECT COUNT(*)
      FROM NOTICE
      WHERE STATUS='I'
        AND NO=#{dId}
   </select>
   
   <select id="tselectList1" resultMap="noticeResultSet">
      SELECT NNO, EID, NO, NTITLE, NCONTENT, NDATE, MODIFYDATE, N.STATUS, ENAME, R.RNAME
      FROM NOTICE N
      JOIN EMPLOYEE E USING (EID)
      LEFT JOIN RANK R USING (RID)
      WHERE N.STATUS='N'
        AND NO=#{dId}
      ORDER BY NNO DESC
   </select>
   
   <select id="tselectList2" resultMap="noticeResultSet">
      SELECT NNO, EID, NO, NTITLE, NCONTENT, NDATE, MODIFYDATE, N.STATUS, ENAME, R.RNAME
      FROM NOTICE N
      JOIN EMPLOYEE E USING (EID)
      LEFT JOIN RANK R USING (RID)
      WHERE N.STATUS='I'
        AND NO=#{dId}
      ORDER BY NNO DESC
   </select>
   
   <!-- 팀별 게시판 status i 검색된 게시글 갯수구하기  -->
   <select id="SselectListCount2" resultType="_int">
      <bind name="sv" value="'%' + _parameter.getSearchValue() + '%'"/>
      SELECT COUNT(*)
      FROM NOTICE N
      JOIN EMPLOYEE E USING (EID)
      <where>
         <choose>
            <when test="searchCondition == 'eName'">
               AND E.ENAME LIKE #{sv}
            </when>
            <when test="searchCondition == 'nTitle'">
               AND NTITLE LIKE #{sv}
            </when>
            <otherwise>
               AND (E.ENAME LIKE #{sv}
                    OR NTITLE LIKE #{sv})
            </otherwise>
         </choose>
      </where>
      AND N.STATUS='I'
      ORDER BY NNO DESC
   </select>
   
   <!-- 팀별 게시판 status i 검색 리스트 가져오기 -->
   <select id="searchList2" parameterType="Search" resultMap="noticeResultSet">
      <bind name="sv" value="'%' + _parameter.getSearchValue() + '%'"/>
      SELECT NNO, EID, NO, NTITLE, NCONTENT, NDATE, MODIFYDATE, N.STATUS, ENAME, R.RNAME
      FROM NOTICE N
      JOIN EMPLOYEE E USING (EID)
      LEFT JOIN RANK R USING (RID)
      <where>
         <choose>
            <when test="searchCondition == 'eName'">
               AND ENAME LIKE #{sv}
            </when>
            <when test="searchCondition == 'nTitle'">
               AND NTITLE LIKE #{sv}
            </when>
            <otherwise>
               AND (ENAME LIKE #{sv}
                    OR NTITLE LIKE #{sv})
            </otherwise>
         </choose>
         AND N.STATUS='I'
      </where>
      ORDER BY NNO DESC
   </select>
   
   <update id="updaten" parameterType="Notice">
      UPDATE NOTICE
      SET NTITLE=#{nTitle},
         NCONTENT=#{nContent}
      WHERE NNO=#{nNo}
   </update>
   
   <update id="Update" parameterType="Notice">
      UPDATE NOTICE
      SET NTITLE=#{nTitle},
         NCONTENT=#{nContent}
      WHERE NNO=#{nNo}
   </update>
   
   <insert id="insertAttachment3" parameterType="Attachment">
      INSERT INTO ATTACHMENT
      VALUES(SEQ_FID.NEXTVAL, NULL, #{nNo}, NULL,
            NULL, NULL, NULL, NULL, #{filePath}, #{originName}, #{changeName}, SYSDATE, 70, DEFAULT)
   </insert>
   
   <select id="homeselectList" resultMap="noticeResultSet">
      SELECT *
      FROM NOTICE
      WHERE STATUS='Y'
        AND NO='1'
        AND ROWNUM &lt; 6
      ORDER BY NNO DESC
   </select>
   
   <select id="hometselectList" resultMap="noticeResultSet">
      SELECT *
      FROM NOTICE
      WHERE STATUS='N'
        AND NO=#{dId}
        AND ROWNUM &lt; 6
      ORDER BY NNO DESC
   </select>
   
</mapper>